
---
# tasks file for roles/ticker

   - name: "initialize job_id"
     ansible.builtin.set_fact:
        job_id: "{{ lookup('pipe', 'date  \"+%Y%m%d_%H%M%S\"') }}"
        job_name: "{{ ticker.job_name }}"
        output: "{{ app_output_fldr }}"

   - name: "start audit log"
     ansible.builtin.include_tasks:
        file: "suppl/common_audit.yml"
     vars:
        - condition: "start"

   - name: NSE ticker list
     ansible.builtin.uri:
        url: "{{ nse.tickerUrl }}"
        method: GET
        headers:
          User-agent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0"
          Accept: "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8"
          Accept-Language: "en-US,en;q=0.5"
          Accept-Encoding: ""
        return_content: true
     register: var_tickers
     when: use_uri_4_nse

   - name: 'shell {{ nse.tickerUrl }}'
     ansible.builtin.shell: |
        curl   -s {{ nse.tickerUrl }}  \
            -H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/113.0' \
            -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8' \
            -H 'Accept-Language: en-US,en;q=0.5' \
            -H 'Accept-Encoding: ""'
     register: var_tickers
     when: not use_uri_4_nse

   - name: 'build data for templating from url'
     ansible.builtin.set_fact:
        tickerList:
           content: "{{ var_tickers.content }}"
     when: use_uri_4_nse

   - name: 'build data for templating from shell'
     ansible.builtin.set_fact:
        tickerList:
           content: "{{ var_tickers.stdout }}"
     when: not use_uri_4_nse


   - name: "Print NSE ticker list"
     ansible.builtin.debug:
        msg: "{{ var_tickers }}"
     when: ticker.debug

   - name: "Create ticker csv file"
     ansible.builtin.template:
        src: "tickers.csv.j2"
        dest: "{{output}}/tickers.sql"
#     when: var_tickers.status == 200

   - name: "DB: Load ticker list"
     community.postgresql.postgresql_script:
        db:          "{{ db.database }}"
        login_host:  "{{ db.hostname }}"
        login_user:  "{{ db.username }}"
        login_password: "{{ db.pwd }}"
        path: "{{output}}/tickers.sql"
     register: db_results0
#     when: var_tickers.status == 200

   - name: "Print NSE ticker list"
     ansible.builtin.debug:
        msg: "load_ticker table is loaded with {{ db_results0.rowcount }} rows"

   - name: "DB: identify new tickers"
     community.postgresql.postgresql_query:
        db:          "{{ db.database }}"
        login_host:  "{{ db.hostname }}"
        login_user:  "{{ db.username }}"
        login_password: "{{ db.pwd }}"
        query: "{{ ticker.query_script }}"
     register: db_results1

   - name: "stop audit log"
     ansible.builtin.include_tasks:
        file: "suppl/common_audit.yml"
     vars:
        - condition: "stop"
