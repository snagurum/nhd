    Map accounts = [
            "DEV"        : "179438333696",
            "Production" : "179438333696"
    ]

    Map clusters = [
            "DEV"        : "Devcluster",
            "Production" : "Experta_Prod"
    ]



pipeline{
    agent any

    parameters {
        choice(name: 'ENVIRONMENT', choices: ['DEV', 'Production'], description: 'Environment')
    }

    environment {
        AWS_ECR_REPO = "program-service"
        ECS_SERVICE = "Programservice"

        AWS_DEFAULT_REGION = 'us-east-1'
        AWS_ACCOUNT_ID = accounts.get(env.ENVIRONMENT)
        ECS_CLUSTER = clusters.get(env.ENVIRONMENT)
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
        DOCKER_IMAGE_TAG_PROGRAM = "${REPOSITORY_URI}/program-service:latest"
        SNS_TOPIC_ARN = "arn:aws:sns:${AWS_DEFAULT_REGION}:${AWS_ACCOUNT_ID}:jenkins"
    }

    tools {
        maven 'maven' // Define Maven tool installation
    }

    stages{
            stage('Initialization'){
                steps{
                    sh """
                    
                    set +x
                    echo "AWS_ACCOUNT_ID           = ${AWS_ACCOUNT_ID}"
                    echo "ECS_CLUSTER              = ${ECS_CLUSTER}"
                    echo "AWS_DEFAULT_REGION       = ${AWS_DEFAULT_REGION}"
                    echo "REPOSITORY_URI           = ${REPOSITORY_URI}"
                    echo "DOCKER_IMAGE_TAG_PROGRAM = ${DOCKER_IMAGE_TAG_PROGRAM}"
                    echo "SNS_TOPIC_ARN            = ${SNS_TOPIC_ARN}"
                    echo "AWS_ECR_REPO             = ${AWS_ECR_REPO}"
                    echo "ECS_SERVICE              = ${ECS_SERVICE}"

                    set -x
                    """
                    script{
                        if (env.ENVIRONMENT == 'Production' && BRANCH_NAME != 'prod'){
                            echo 'Invalid deployment options ENVIRONMENT =' + env.ENVIRONMENT + '& BRANCH_NAME = ' + BRANCH_NAME
                            currentBuild.result = 'FAILURE'
                            // return 
                        }
                    }
                }
            }

                        if (env.ENVIRONMENT == 'Production' && BRANCH_NAME != 'prod'){
                            // echo 'Invalid deployment options ENVIRONMENT =' + env.ENVIRONMENT + '& BRANCH_NAME = ' + BRANCH_NAME
                            // currentBuild.result = 'FAILURE'
                            return 
                        }

            stage('Git Checkout') {
                steps{
                    checkout scm
                }
            }
        }
}